name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  actions: read
  security-events: write
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Verify upstream repository
      run: |
        if [ "$GITHUB_REPOSITORY" != "therealcoolnerd/omni" ]; then
          echo "Publishing is only allowed from the upstream repository" && exit 1
        fi

  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64
            archive: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
            archive: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-aarch64
            archive: tar.gz

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@25dc93b901a87194fc51fcb9b13cf938a4ca9b30
      with:
        toolchain: stable
        targets: ${{ matrix.target }}

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          pkg-config \
          libssl-dev \
          libsqlite3-dev \
          libgtk-3-dev

    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: |
        brew install sqlite openssl pkg-config

    - name: Build release
      run: cargo build --release --target ${{ matrix.target }} --all-features

    - name: Create archive (Unix)
      if: matrix.archive == 'tar.gz'
      run: |
        cd target/${{ matrix.target }}/release
        tar -czf ../../../omni-${{ matrix.name }}.tar.gz omni
        cd ../../..

    - name: Create archive (Windows)
      if: matrix.archive == 'zip'
      run: |
        cd target/${{ matrix.target }}/release
        7z a ../../../omni-${{ matrix.name }}.zip omni.exe
        cd ../../..

    - name: Create checksums
      run: |
        cd .
        sha256sum omni-${{ matrix.name }}.${{ matrix.archive }} > omni-${{ matrix.name }}.${{ matrix.archive }}.sha256
        
    - name: Upload Release Assets
      uses: softprops/action-gh-release@f37a2f9143791b88da06f2c143d376e00fce81dc
      with:
        files: |
          omni-${{ matrix.name }}.${{ matrix.archive }}
          omni-${{ matrix.name }}.${{ matrix.archive }}.sha256
        body: |
          ## What's Changed
          
          * See the [changelog](CHANGELOG.md) for detailed changes
          * Download the appropriate binary for your platform below
          
          ## Installation
          
          ### Linux (Ubuntu/Debian)
          ```bash
          wget https://github.com/therealcoolnerd/omni/releases/download/${{ github.ref_name }}/omni-linux-x86_64.tar.gz
          tar -xzf omni-linux-x86_64.tar.gz
          sudo mv omni /usr/local/bin/
          ```
          
          ### Windows
          ```powershell
          # Download omni-windows-x86_64.zip and extract
          # Add to PATH or run directly
          ```
          
          ### macOS
          ```bash
          wget https://github.com/therealcoolnerd/omni/releases/download/${{ github.ref_name }}/omni-macos-x86_64.tar.gz
          tar -xzf omni-macos-x86_64.tar.gz
          sudo mv omni /usr/local/bin/
          ```

  publish-crates:
    name: Publish to crates.io
    needs: build-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@25dc93b901a87194fc51fcb9b13cf938a4ca9b30
      with:
        toolchain: stable
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          pkg-config \
          libssl-dev \
          libsqlite3-dev
          
    - name: Login to crates.io
      run: echo "${{ secrets.CRATES_TOKEN }}" | cargo login
      
    - name: Publish to crates.io
      run: cargo publish

  update-homebrew:
    name: Update Homebrew Formula
    needs: build-release
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Verify upstream repository
      run: |
        if [ "$GITHUB_REPOSITORY" != "therealcoolnerd/omni" ]; then
          echo "Publishing is only allowed from the upstream repository" && exit 1
        fi
    - name: Update Homebrew formula
      uses: mislav/bump-homebrew-formula-action@65542ba63f8a8b4ef91a5b30d15b8e324a6bb6ff
      with:
        formula-name: omni
        homebrew-tap: therealcoolnerd/homebrew-tap
        base-branch: main
        download-url: https://github.com/therealcoolnerd/omni/releases/download/${{ github.ref_name }}/omni-macos-x86_64.tar.gz
      env:
        COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}