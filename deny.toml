# Configuration for cargo-deny
# See: https://embarkstudios.github.io/cargo-deny/

[licenses]
# List of explicitly allowed licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "CC0-1.0",
    "MPL-2.0",
    "AGPL-3.0-or-later",  # Our project license
]

# List of explicitly disallowed licenses
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "LGPL-2.0",
    "LGPL-2.1",
    "LGPL-3.0",
]

# Lint level for when multiple versions of the same license are detected
multiple-versions = "warn"

# Confidence threshold for detecting a license from a license text.
# We want to be pretty confident it's the right license
confidence-threshold = 0.8

# Allow 1 or more licenses on a per-crate basis, so that particular licenses
# aren't accepted for every possible crate as with the normal allow list
exceptions = [
    # Ring uses an OpenSSL/ISC style license
    { allow = ["ISC", "MIT", "OpenSSL"], name = "ring" },
    { allow = ["ISC", "MIT"], name = "untrusted" },
]

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"

# List of crates that are allowed to have multiple versions
allow-multiple-versions = [
    # Common cases where multiple versions are unavoidable
    "windows-sys",
    "windows_x86_64_msvc",
    "syn",
]

# Crates to explicitly deny
deny = [
    # Deny old versions with known security issues
    { name = "openssl", version = "<1.0" },
    { name = "chrono", version = "<0.4.20" },
]

# Certain crates/versions that will be skipped when doing duplicate detection.
skip = []

# Similarly to `skip` allows you to skip certain crates from being checked
skip-tree = []

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"

# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]

# The lint level for security vulnerabilities
vulnerability = "deny"

# The lint level for unmaintained crates
unmaintained = "warn"

# The lint level for crates that have been yanked from their source registry
yanked = "warn"

# The lint level for crates with security notices.
notice = "warn"

# A list of advisory IDs to ignore. Note that ignored advisories will still
# output a note when they are encountered.
ignore = [
    # Add specific advisory IDs here if needed
    # "RUSTSEC-YYYY-NNNN",
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"

# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"

# List of allowed registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]

# List of allowed Git repositories
allow-git = []